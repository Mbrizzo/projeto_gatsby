{"version":3,"sources":["webpack:///./src/components/PostItem/styled.js","webpack:///./src/components/PostItem/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Layout/styled.js","webpack:///./src/components/Layout/index.js"],"names":["PostItemLink","styled","Link","PostItemWrapper","section","PostItemTag","div","props","background","PostItemInfo","PostItemData","time","PostItemTitle","h1","PostItemDescription","p","PostItem","slug","category","date","timeToRead","title","description","to","IndexPage","postList","useStaticQuery","allMarkdownRemark","edges","Layout","map","node","frontmatter","fields","LayoutWrapper","LayoutMain","main","children","Sidebar","MenuBar"],"mappings":"2KAGaA,EAAeC,YAAOC,QAAV,2EAAGD,CAAH,6EAUZE,EAAkBF,IAAOG,QAAV,8EAAGH,CAAH,mGAQfI,EAAcJ,IAAOK,IAAV,0EAAGL,CAAH,mNAGR,SAAAM,GAAK,OAAKA,EAAMC,WAAaD,EAAMC,WAAa,aAYnDC,EAAeR,IAAOK,IAAV,2EAAGL,CAAH,4DAMZS,EAAeT,IAAOU,KAAV,2EAAGV,CAAH,uBAIZW,EAAgBX,IAAOY,GAAV,4EAAGZ,CAAH,8DAMba,EAAsBb,IAAOc,EAAV,kFAAGd,CAAH,uDCdjBe,EAjCE,SAAC,GAAD,IACfC,EADe,EACfA,KACAT,EAFe,EAEfA,WACAU,EAHe,EAGfA,SACAC,EAJe,EAIfA,KACAC,EALe,EAKfA,WACAC,EANe,EAMfA,MACAC,EAPe,EAOfA,YAPe,OASf,kBAAC,EAAD,CAAgBC,GAAIN,GAClB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAeT,WAAYA,GAAaU,GACxC,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGC,EADH,uBAC6BC,GAE7B,kBAAC,EAAD,KAAkBC,GAClB,kBAAC,EAAD,KAAwBC,OCmCjBE,UAlDG,WAAO,IAuBjBC,EAtBwBC,yBAAe,aAArCC,kBAsB2BC,MAEnC,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKR,MAAM,SACVI,EAASK,KACR,oBACEC,KADF,IAEIC,YAAexB,EAFnB,EAEmBA,WAAYU,EAF/B,EAE+BA,SAAUC,EAFzC,EAEyCA,KAAMG,EAF/C,EAE+CA,YAAaD,EAF5D,EAE4DA,MACxDD,EAHJ,EAGIA,WACUH,EAJd,EAIIgB,OAAUhB,KAJd,OAOE,kBAAC,EAAD,CACEA,KAAMA,EACNT,WAAYA,EACZU,SAAUA,EACVC,KAAMA,EACNC,WAAYA,EACZC,MAAOA,EACPC,YAAaA,U,+FChDZY,EAAgBjC,IAAOG,QAAV,2EAAGH,CAAH,mBAGbkC,EAAalC,IAAOmC,KAAV,wEAAGnC,CAAH,+E,YCkBR4B,IAfA,SAAC,GAAkB,IAAhBQ,EAAe,EAAfA,SAChB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,KAAeD,GACf,kBAACE,EAAA,EAAD","file":"component---src-pages-index-js-dc6f0025c1cfb0f88b04.js","sourcesContent":["import styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport const PostItemLink = styled(Link)`\r\n  color: #8899a6;\r\n  display: flex;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    color: #1fa1f2;\r\n  }\r\n`\r\n\r\nexport const PostItemWrapper = styled.section`\r\n  align-items: center;\r\n  border-bottom: 1px solid #38444d;\r\n  display: flex;\r\n  padding: 2rem 3rem;\r\n  width: 100%;\r\n`\r\n\r\nexport const PostItemTag = styled.div`\r\n  align-items: center;\r\n  margin-left: 2rem;\r\n  background: ${props => (props.background ? props.background : \"#1fa1f2\")};\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  font-weight: 700;\r\n  justify-content: center;\r\n  min-height: 90px;\r\n  min-width: 90px;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const PostItemInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 1.5rem;\r\n`\r\n\r\nexport const PostItemData = styled.time`\r\n  font-size: 0.9rem;\r\n`\r\n\r\nexport const PostItemTitle = styled.h1`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  margin: 0.2rem 0 0.5rem;\r\n`\r\n\r\nexport const PostItemDescription = styled.p`\r\n  font-size: 1.2rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport * as S from \"./styled\"\r\n\r\nconst PostItem = ({\r\n  slug,\r\n  background,\r\n  category,\r\n  date,\r\n  timeToRead,\r\n  title,\r\n  description,\r\n}) => (\r\n  <S.PostItemLink to={slug}>\r\n    <S.PostItemWrapper>\r\n      <S.PostItemTag background={background}>{category}</S.PostItemTag>\r\n      <S.PostItemInfo>\r\n        <S.PostItemData>\r\n          {date} minutes of reading {timeToRead}\r\n        </S.PostItemData>\r\n        <S.PostItemTitle>{title}</S.PostItemTitle>\r\n        <S.PostItemDescription>{description}</S.PostItemDescription>\r\n      </S.PostItemInfo>\r\n    </S.PostItemWrapper>\r\n  </S.PostItemLink>\r\n)\r\n\r\nPostItem.propTypes = {\r\n  slug: PropTypes.string.isRequired,\r\n  background: PropTypes.string,\r\n  category: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  timeToRead: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default PostItem\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport SEO from \"../components/seo\"\r\nimport PostItem from \"../components/PostItem\"\r\n\r\nconst IndexPage = () => {\r\n  const { allMarkdownRemark } = useStaticQuery(graphql`\r\n    query PostList {\r\n      allMarkdownRemark {\r\n        edges {\r\n          node {\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              background\r\n              category\r\n              date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\r\n              description\r\n              title\r\n            }\r\n            timeToRead\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const postList = allMarkdownRemark.edges\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      {postList.map(\r\n        ({\r\n          node: {\r\n            frontmatter: { background, category, date, description, title },\r\n            timeToRead,\r\n            fields: { slug },\r\n          },\r\n        }) => (\r\n          <PostItem\r\n            slug={slug}\r\n            background={background}\r\n            category={category}\r\n            date={date}\r\n            timeToRead={timeToRead}\r\n            title={title}\r\n            description={description}\r\n          />\r\n        )\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\nexport default IndexPage\r\n","import styled from \"styled-components\"\r\n\r\nexport const LayoutWrapper = styled.section`\r\n  display: flex;\r\n`\r\nexport const LayoutMain = styled.main`\r\n  background: #102027;\r\n  min-height: 100vh;\r\n  padding: 0 3.75rem 0 20rem;\r\n  width: 100%;\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Sidebar from \"../Sidebar\"\r\nimport MenuBar from \"../MenuBar\"\r\n\r\nimport * as S from \"./styled\"\r\nimport GlobalStyles from \"../../styles/global\"\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <S.LayoutWrapper>\r\n      <GlobalStyles />\r\n      <Sidebar />\r\n      <S.LayoutMain>{children}</S.LayoutMain>\r\n      <MenuBar />\r\n    </S.LayoutWrapper>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}